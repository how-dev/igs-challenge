# Generated by Django 4.0.2 on 2022-02-21 16:50

import apps.employee.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('department', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('document', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Length must to be 11', regex='^.{11}$')])),
                ('departament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employee', to='department.departmentmodel')),
            ],
            options={
                'db_table': 'employees',
                'managed': True,
            },
            managers=[
                ('objects', apps.employee.models.UserManager()),
            ],
        ),
    ]
